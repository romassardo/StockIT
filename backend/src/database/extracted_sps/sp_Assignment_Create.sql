CREATE PROCEDURE dbo.sp_Assignment_Create ( @inventario_individual_id INT, @tipo_asignacion VARCHAR(20), @id_destino INT, @usuario_asigna_id INT, @observaciones TEXT = NULL, @password_encriptacion VARCHAR(255) = NULL, @numero_telefono VARCHAR(20) = NULL, @cuenta_gmail VARCHAR(100) = NULL, @password_gmail VARCHAR(255) = NULL, @codigo_2fa_whatsapp VARCHAR(50) = NULL, @id_asignacion INT OUTPUT ) AS BEGIN SET NOCOUNT ON; DECLARE @estado_actual VARCHAR(20), @producto_id INT, @id_empleado INT, @id_sector INT, @id_sucursal INT, @log_descripcion NVARCHAR(MAX), @nombre_entidad NVARCHAR(100); SELECT @estado_actual = estado, @producto_id = producto_id FROM dbo.InventarioIndividual WHERE id = @inventario_individual_id; IF @estado_actual <> 'Disponible' BEGIN RAISERROR('El activo no está disponible para asignación.', 16, 1); RETURN; END; SET @id_empleado = CASE WHEN @tipo_asignacion = 'Empleado' THEN @id_destino ELSE NULL END; SET @id_sector = CASE WHEN @tipo_asignacion = 'Sector' THEN @id_destino ELSE NULL END; SET @id_sucursal = CASE WHEN @tipo_asignacion = 'Sucursal' THEN @id_destino ELSE NULL END; BEGIN TRANSACTION; INSERT INTO dbo.Asignaciones ( inventario_individual_id, empleado_id, sector_id, sucursal_id, fecha_asignacion, usuario_asigna_id, observaciones, password_encriptacion, numero_telefono, cuenta_gmail, password_gmail, codigo_2fa_whatsapp, activa ) VALUES ( @inventario_individual_id, @id_empleado, @id_sector, @id_sucursal, GETDATE(), @usuario_asigna_id, @observaciones, @password_encriptacion, @numero_telefono, @cuenta_gmail, @password_gmail, @codigo_2fa_whatsapp, 1 ); SET @id_asignacion = SCOPE_IDENTITY(); UPDATE dbo.InventarioIndividual SET estado = 'Asignado' WHERE id = @inventario_individual_id; SET @log_descripcion = 'Activo asignado a '; IF @id_empleado IS NOT NULL BEGIN SELECT @nombre_entidad = nombre + ' ' + apellido FROM Empleados WHERE id = @id_empleado; SET @log_descripcion = @log_descripcion + 'Empleado: ' + @nombre_entidad; END ELSE IF @id_sector IS NOT NULL BEGIN SELECT @nombre_entidad = nombre FROM Sectores WHERE id = @id_sector; SET @log_descripcion = @log_descripcion + 'Sector: ' + @nombre_entidad; END ELSE IF @id_sucursal IS NOT NULL BEGIN SELECT @nombre_entidad = nombre FROM Sucursales WHERE id = @id_sucursal; SET @log_descripcion = @log_descripcion + 'Sucursal: ' + @nombre_entidad; END; INSERT INTO dbo.LogsActividad (usuario_id, tabla_afectada, accion, registro_id, descripcion) VALUES (@usuario_asigna_id, 'Asignaciones', 'INSERT', @id_asignacion, @log_descripcion); COMMIT TRANSACTION; END;